name: build

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
    branches:
      - main
  delete:

permissions:
  contents: read
  pull-requests: write

env:
  BUF_VERSION: "1.55.1"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Buf Build
        uses: bufbuild/buf-action@v1
        with:
          version:  ${{ env.BUF_VERSION }}
          token: ${{ secrets.BUF_TOKEN}}
          github_token: ${{ secrets.GH_TOKEN}}
          push_disable_create: true

  kosli:
    runs-on: ubuntu-latest
    needs: build
    env:
      KOSLI_API_TOKEN: ${{ secrets.KOSLI_TOKEN }}
      KOSLI_ORG: gimmyxd
      FLOW_NAME: sdd-flow
    steps:
      -
        name: setup kosli
        uses: kosli-dev/setup-cli-action@v2
      -
        name: Kosli report proto artifact
        run: |
         kosli attest artifact \
            --artifact-type gimmyxd/buf-buid \
            --name proto-bindings \
            --flow ${{env.FLOW_NAME}} \
            --trail $(git rev-parse HEAD)
            --api-token "${{ env.KOSLI_API_TOKEN }}" \
            --org ${{env.KOSLI_ORG}}

  trigger-dispatches:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        cfg:
          - { project: go-pokemon }
          - { project: ts-directory }
          - { project: openapi-directory }

    name: Generate on ${{ matrix.cfg.project }}
    steps:
      -
        name: Trigger dispatch
        run: |
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GH_TOKEN}}" \
          https://api.github.com/repos/aserto-dev/${{ matrix.cfg.project }}/actions/workflows/ci.yaml/dispatches --data '{"ref": "main", "inputs": {"proto_ref": "${{ github.ref }}", "proto_sha": "${{ github.sha }}" }}'
